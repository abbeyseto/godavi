/**
 * This code was generated by v0 by Vercel.
 * @see https://v0.dev/t/RLmzRQHO2I4
 * Documentation: https://v0.dev/docs#integrating-generated-code-into-your-nextjs-app
 */

"use client";
require("dotenv").config();
import Link from "next/link";
import Image from "next/image";
import { Button } from "@/components/ui/button";
import { CardContent, Card } from "@/components/ui/card";
import { Input } from "@/components/ui/input";
import { JSX, SVGProps } from "react";
import {
  Menubar,
  MenubarContent,
  MenubarItem,
  MenubarMenu,
  MenubarSeparator,
  MenubarTrigger,
} from "@/components/ui/menubar";
import { Textarea } from "@/components/ui/textarea";
import React, { useEffect, useState } from "react";
import { GoogleMap, LoadScript, Marker } from "@react-google-maps/api";
import { urlForImage } from "../../sanity/lib/image";
import { Product } from "@/lib/typings";
import { useForm, SubmitHandler } from "react-hook-form";

type Inputs = {
  name: string;
  email: string;
  company: string;
  phone: string;
  message: string;
};

const containerStyle = {
  width: "100%",
  height: "400px",
};

const defaultCenter = {
  lat: 40.748817,
  lng: -73.985428,
};

const getCoordinates = async (address: string | number | boolean) => {
  const response = await fetch(
    `https://maps.googleapis.com/maps/api/geocode/json?address=${encodeURIComponent(address)}&key=${process.env.NEXT_PUBLIC_GOOGLE_MAPS_API_KEY}`
  );
  const data = await response.json();
  if (data.results.length > 0) {
    const { lat, lng } = data.results[0].geometry.location;
    return { lat, lng };
  }
  return null;
};

const Map = ({ apiKey, address }: any) => {
  const [center, setCenter] = useState(defaultCenter);

  useEffect(() => {
    if (address) {
      getCoordinates(address).then((coords) => {
        if (coords) {
          setCenter(coords);
        }
      });
    }
  }, [address]);

  return (
    <LoadScript googleMapsApiKey={apiKey}>
      <GoogleMap mapContainerStyle={containerStyle} center={center} zoom={14}>
        <Marker position={center} />
      </GoogleMap>
    </LoadScript>
  );
};

export function HomePage() {
  const [products, setProducts] = useState<Product[]>([]);
  const [submitting, setSubmitting] = useState(false);
  const [successMessage, setSuccessMessage] = useState("");
  const [failureMessage, setFailureMessage] = useState("");
  const { register, handleSubmit, reset } = useForm<Inputs>();

  const onSubmit: SubmitHandler<Inputs> = async (formData) => {
    setSubmitting(true);
    const to = "daniel.ameh@godavistore.com";
    const subject = "Message from Godavi Store";
    const text = formData.message;
    const html = `<!DOCTYPE html>
    <html lang="en">
    <head>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>Introduction Email</title>
    </head>
    <body>
        
        <p>Hi Godavi Store,</p>
        
        <p>You just recieved a message from <strong>${formData.name}</strong>. They've sent you a message from your website:</p>
        
        <h2>Message:</h2>
        <p><strong>From:</strong> ${formData.name} &lt;${formData.email}&gt;</p>
        <p><strong>Phone Number:</strong> ${formData.phone} </p>
        <p><strong>Company Name:</strong> ${formData.company} </p>
        <p><strong>Message:</strong> ${formData.message}</p>
        
        <p>Best regards,<br>
        Your Name</p>
        Godavi Notifications.
    </body>
    </html>`;

    const emailStatus = await fetch(
      `${process.env.NEXT_PUBLIC_BASE_URL}/api/sendemail`,
      { method: "POST", body: JSON.stringify({ to, subject, text, html }) }
    );
    const data = await emailStatus.json();
    console.log(data);
    if (data.message.includes("success")) {
      setSuccessMessage(data.message);
      reset(); // Clear form fields
    } else {
      setFailureMessage(data.message);
    }
    setSubmitting(false);
  };

  useEffect(() => {
    async function fetchData() {
      const get_products = await fetch(
        `${process.env.NEXT_PUBLIC_BASE_URL}/api/products`
      );
      console.log(get_products);
      const get_products_data = await get_products.json();
      setProducts(get_products_data.products);
    }
    fetchData();
  }, []);

  return (
    <div className="flex flex-col min-h-[100dvh]">
      <header className="bg-gray-900 text-white py-4 px-6 md:px-12 flex items-center justify-between">
        <Link className="flex items-center gap-2" href="#">
          <LogInIcon className="h-8 w-8" />
          <span className="text-lg font-semibold">GODAVI</span>
        </Link>
        <nav className="hidden md:flex items-center gap-6">
          <Link className="hover:underline" href="#">
            Home
          </Link>
          <Link className="hover:underline" href="#">
            Store
          </Link>
          <Link className="hover:underline" href="#">
            About
          </Link>
          <Link className="hover:underline" href="#">
            Our Services
          </Link>
          <Link className="hover:underline" href="#">
            Contact
          </Link>
        </nav>
        <div className="md:hidden">
          <Menubar>
            <MenubarMenu>
              <MenubarTrigger>
                <MenuIcon className="h-6 w-6 text-gray-900" />
              </MenubarTrigger>
              <MenubarContent>
                <MenubarItem>
                  <Link className="hover:underline" href="#">
                    Home
                  </Link>
                </MenubarItem>
                <MenubarItem>
                  <Link className="hover:underline" href="#">
                    Store
                  </Link>
                </MenubarItem>
                <MenubarItem>
                  {" "}
                  <Link className="hover:underline" href="#">
                    About
                  </Link>
                </MenubarItem>
                <MenubarSeparator />
                <MenubarItem>
                  <Link className="hover:underline" href="#">
                    Our Services
                  </Link>
                </MenubarItem>
                <MenubarItem>
                  <Link className="hover:underline" href="#">
                    Contact
                  </Link>
                </MenubarItem>
              </MenubarContent>
            </MenubarMenu>
          </Menubar>
        </div>
      </header>
      <main className="flex-1">
        <section className="bg-gray-900 text-white py-20 px-6 md:px-12 flex flex-col md:flex-row items-center justify-between gap-8">
          <div className="max-w-xl space-y-4">
            <h1 className="text-4xl font-bold">Discover the Best Products</h1>
            <p className="text-gray-300">
              Explore our wide range of high-quality products and find the
              perfect fit for your needs.
            </p>
            <div className="flex gap-4">
              <Link
                className="inline-flex h-10 items-center justify-center rounded-md bg-blue-500 px-6 text-sm font-medium text-white shadow transition-colors hover:bg-blue-600 focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-blue-950 disabled:pointer-events-none disabled:opacity-50"
                href="/shop"
              >
                Shop Now
              </Link>
              <Link
                className="inline-flex h-10 items-center justify-center rounded-md border border-gray-200 bg-transparent px-6 text-sm font-medium text-gray-300 shadow-sm transition-colors hover:bg-gray-800 focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-gray-950 disabled:pointer-events-none disabled:opacity-50 dark:border-gray-800"
                href="#"
              >
                Learn More
              </Link>
            </div>
          </div>
          <Image
            alt="Hero Image"
            className="rounded-lg shadow-lg  w-full md:w-1/2"
            height="400"
            src="/placeholder.svg"
            style={{
              aspectRatio: "600/400",
              objectFit: "cover",
            }}
            width="600"
          />
        </section>
        <section className="bg-white py-20 px-6 md:px-12">
          <div className="max-w-5xl mx-auto space-y-8">
            <div className="text-center space-y-4">
              <h2 className="text-3xl font-bold">About Godavi</h2>
              <p className="text-gray-600">
                Godavi, inspired and founded by college students, is an emerging
                online e-commerce enterprise dedicated to scaling and expanding
                through strategic partnerships and the reselling of established
                brand products.{" "}
              </p>
              <p className="text-gray-600">
                Our mission is to establish Godavi as a successful and enduring
                business for generations to come, with a steadfast commitment to
                quality and customer satisfaction at the forefront of our
                expansion strategy. In addition to reselling renowned brands,
                Godavi is also in the process of developing its innovative
                products to introduce to the global marketplace.
              </p>
              <p className="text-gray-600">
                We believe in providing exceptional value, which is encapsulated
                in our slogan: “Save More. Live More.”
              </p>
            </div>
            <div className="grid grid-cols-1 md:grid-cols-3 gap-8">
              <div className="space-y-4">
                <QrCodeIcon className="h-12 w-12 text-blue-500" />
                <h3 className="text-xl font-bold">Quality Assurance</h3>
                <p className="text-gray-600">
                  We are committed to delivering products that meet the highest
                  standards of quality and durability.
                </p>
              </div>
              <div className="space-y-4">
                <RecycleIcon className="h-12 w-12 text-blue-500" />
                <h3 className="text-xl font-bold">Sustainability</h3>
                <p className="text-gray-600">
                  Our products are designed with the environment in mind, using
                  eco-friendly materials and sustainable practices.
                </p>
              </div>
              <div className="space-y-4">
                <StoreIcon className="h-12 w-12 text-blue-500" />
                <h3 className="text-xl font-bold">Customer Service</h3>
                <p className="text-gray-600">
                  We pride ourselves on our exceptional customer service, always
                  striving to exceed our customers&apos; expectations.
                </p>
              </div>
            </div>
          </div>
        </section>
        <section className="bg-white py-20 px-6 md:px-12">
          <div className="max-w-5xl mx-auto space-y-8">
            <div className="text-center space-y-4">
              <h2 className="text-3xl font-bold">Our Services</h2>
              <p className="text-gray-600">
                Godavi offers a wide range of services to meet your needs.
              </p>
            </div>
            <div className="grid grid-cols-1 md:grid-cols-2 gap-8">
              <div className="space-y-4">
                <PackageIcon className="h-12 w-12 text-blue-500" />
                <h3 className="text-xl font-bold">
                  Reselling Established Brands
                </h3>
                <p className="text-gray-600">
                  We specialize in reselling established brand products to our
                  customers.
                </p>
              </div>
              <div className="space-y-4">
                <LightbulbIcon className="h-12 w-12 text-blue-500" />
                <h3 className="text-xl font-bold">
                  Innovative Product Development
                </h3>
                <p className="text-gray-600">
                  We are developing innovative products for the global
                  marketplace.
                </p>
              </div>
              <div className="space-y-4">
                <TruckIcon className="h-12 w-12 text-blue-500" />
                <h3 className="text-xl font-bold">Comprehensive Logistics</h3>
                <p className="text-gray-600">
                  We provide comprehensive logistics solutions to our customers.
                </p>
              </div>
              <div className="space-y-4">
                <GlobeIcon className="h-12 w-12 text-blue-500" />
                <h3 className="text-xl font-bold">Multi-Channel Sales</h3>
                <p className="text-gray-600">
                  We sell on multiple channels including Canada Walmart,
                  international wholesale distribution to warehouses, and Amazon
                  US.
                </p>
              </div>
            </div>
          </div>
        </section>
        <section className="bg-white py-20 px-6 md:px-12">
          <div className="max-w-5xl mx-auto space-y-8">
            <div className="text-center space-y-4">
              <h2 className="text-3xl font-bold">Our Mission</h2>
              <p className="text-gray-600">
                Godavi is committed to achieving our mission.
              </p>
            </div>
            <div className="grid grid-cols-1 md:grid-cols-2 gap-8">
              <div className="space-y-4">
                <TargetIcon className="h-12 w-12 text-blue-500" />
                <h3 className="text-xl font-bold">Enduring Business</h3>
                <p className="text-gray-600">
                  To establish Godavi as a successful and enduring business for
                  generations to come.
                </p>
              </div>
              <div className="space-y-4">
                <ThumbsUpIcon className="h-12 w-12 text-blue-500" />
                <h3 className="text-xl font-bold">Customer Satisfaction</h3>
                <p className="text-gray-600">
                  To ensure customer satisfaction and provide exceptional value.
                </p>
              </div>
            </div>
          </div>
        </section>
        <section className="bg-gray-100 py-20 px-6 md:px-12">
          <div className="max-w-5xl mx-auto space-y-8">
            <div className="text-center space-y-4">
              <h2 className="text-3xl font-bold">Featured Products</h2>
              <p className="text-gray-600">
                Explore our curated selection of the best products for your
                needs.
              </p>
            </div>
            <div className="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-8">
              {products.map((product) => (
                <Card key={product._id}>
                  <Image
                    alt={product.title}
                    className="rounded-t-lg w-full"
                    height="300"
                    src={urlForImage(product.images[0]) ?? ""} // Assuming each product has an image property
                    width="300"
                  />
                  <CardContent className="p-4 space-y-2">
                    <h3 className="text-xl font-bold">{product.title}</h3>
                    <p className="text-gray-600">
                      {product.description.slice(0, 120)} . . .
                    </p>
                    <div className="flex justify-between items-center">
                      <span className="font-bold text-blue-500">
                        ${product.price}
                      </span>{" "}
                      {/* Assuming each product has a price property */}
                      <Link
                        className="inline-flex h-8 items-center justify-center rounded-md bg-blue-500 px-4 text-sm font-medium text-white shadow transition-colors hover:bg-blue-600 focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-blue-950 disabled:pointer-events-none disabled:opacity-50"
                        href="#"
                      >
                        Add to Cart
                      </Link>
                    </div>
                  </CardContent>
                </Card>
              ))}
            </div>
          </div>
        </section>
        <section className="bg-white py-20 px-6 md:px-12">
          <div className="max-w-5xl mx-auto grid md:grid-cols-2 gap-8">
            <div className="space-y-4">
              <h2 className="text-3xl font-bold">Contact Us</h2>
              <p className="text-gray-600">
                Have a question or feedback? We&apos;d love to hear from you.
              </p>
              <div className="flex flex-col md:flex-row gap-4">
                <div className="flex items-center gap-2">
                  <PhoneIcon className="h-5 w-5 text-gray-500" />
                  <span className="text-gray-600">+1 (555) 555-5555</span>
                </div>
                <div className="flex items-center gap-2">
                  <MailIcon className="h-5 w-5 text-gray-500" />
                  <span className="text-gray-600">info@godavi.com</span>
                </div>
                <div className="flex items-center gap-2">
                  <Link className="hover:underline" href="#">
                    <FacebookIcon className="h-5 w-5 text-gray-500" />
                  </Link>
                  <Link className="hover:underline" href="#">
                    <TwitterIcon className="h-5 w-5 text-gray-500" />
                  </Link>
                  <Link className="hover:underline" href="#">
                    <InstagramIcon className="h-5 w-5 text-gray-500" />
                  </Link>
                </div>
              </div>
              <div className="flex flex-col md:flex-row gap-4">
                <div className="flex items-center gap-2">
                  <LocateIcon className="h-5 w-5 text-gray-500" />
                  <span className="text-gray-600">
                    123 Main St, Anytown USA 12345
                  </span>
                </div>
              </div>
              <div className="pt-4">
                <Map
                  apiKey={process.env.NEXT_PUBLIC_GOOGLE_MAPS_API_KEY}
                  address="24 Alowonle Adio St Lagos, Nigeria"
                />
              </div>
            </div>
            <form
              onSubmit={handleSubmit(onSubmit)}
              className="bg-gray-100 p-6 rounded-lg shadow-md"
            >
              <h3 className="text-2xl font-bold mb-4">Get in Touch</h3>
              <div className="grid grid-cols-1 gap-4">
                <div>
                  <label
                    className="block text-gray-700 font-medium mb-2"
                    htmlFor="name"
                  >
                    Full Name
                  </label>
                  <Input
                    {...register("name")}
                    required
                    id="name"
                    placeholder="Enter your name"
                    type="text"
                  />
                </div>
                <div>
                  <label
                    className="block text-gray-700 font-medium mb-2"
                    htmlFor="company"
                  >
                    Company
                  </label>
                  <Input
                    {...register("company")}
                    id="company"
                    placeholder="Enter your company"
                    type="text"
                  />
                </div>
                <div>
                  <label
                    className="block text-gray-700 font-medium mb-2"
                    htmlFor="email"
                  >
                    Email
                  </label>
                  <Input
                    {...register("email")}
                    required
                    id="email"
                    placeholder="Enter your email"
                    type="email"
                  />
                </div>
                <div>
                  <label
                    className="block text-gray-700 font-medium mb-2"
                    htmlFor="phone"
                  >
                    Phone
                  </label>
                  <Input
                    {...register("phone")}
                    id="phone"
                    placeholder="Enter your phone number"
                    type="text"
                  />
                </div>
                <div>
                  <label
                    className="block text-gray-700 font-medium mb-2"
                    htmlFor="message"
                  >
                    Message
                  </label>
                  <Textarea
                    {...register("message")}
                    id="message"
                    required
                    placeholder="Enter your message"
                    rows={5}
                  />
                </div>
                <Button
                  type="submit"
                  variant="default"
                  size="default"
                  disabled={submitting}
                >
                  {submitting ? "Submitting..." : "Submit"}
                </Button>
              </div>
              {successMessage && (
              <p className="text-green-900 text-md border-4 text-center py-3 md:py-5 px-10 rounded-lg border-lime-200 bg-green-100 font-semibold animate-pulse">
                {successMessage}
              </p>
            )}
            {failureMessage && (
              <p className="text-red-900 text-md border-4 text-center py-3 md:py-5 px-10 rounded-lg border-orange-200 bg-red-100 p-4 font-semibold animate-pulse">
                {failureMessage}
              </p>
            )}
            </form>
          </div>
        </section>
        <footer className="bg-gray-900 text-white py-8 px-6 md:px-12">
          <div className="max-w-5xl mx-auto flex flex-col md:flex-row justify-between items-center gap-4">
            <div className="flex items-center gap-2">
              <LogInIcon className="h-8 w-8" />
              <span className="text-lg font-semibold">Godavi</span>
            </div>
            <nav className="flex items-center gap-6">
              <Link href="#" className="hover:underline" prefetch={false}>
                Home
              </Link>
              <Link href="#" className="hover:underline" prefetch={false}>
                Store
              </Link>
              <Link href="#" className="hover:underline" prefetch={false}>
                About
              </Link>
              <Link href="#" className="hover:underline" prefetch={false}>
                Contact
              </Link>
            </nav>
            <p className="text-sm text-gray-400">
              &copy; 2024 Godavi. All rights reserved.
            </p>
          </div>
        </footer>
      </main>
    </div>
  );
}

function FacebookIcon(
  props: JSX.IntrinsicAttributes & SVGProps<SVGSVGElement>
) {
  return (
    <svg
      {...props}
      xmlns="http://www.w3.org/2000/svg"
      width="24"
      height="24"
      viewBox="0 0 24 24"
      fill="none"
      stroke="currentColor"
      strokeWidth="2"
      strokeLinecap="round"
      strokeLinejoin="round"
    >
      <path d="M18 2h-3a5 5 0 0 0-5 5v3H7v4h3v8h4v-8h3l1-4h-4V7a1 1 0 0 1 1-1h3z" />
    </svg>
  );
}

function GlobeIcon(props: JSX.IntrinsicAttributes & SVGProps<SVGSVGElement>) {
  return (
    <svg
      {...props}
      xmlns="http://www.w3.org/2000/svg"
      width="24"
      height="24"
      viewBox="0 0 24 24"
      fill="none"
      stroke="currentColor"
      strokeWidth="2"
      strokeLinecap="round"
      strokeLinejoin="round"
    >
      <circle cx="12" cy="12" r="10" />
      <path d="M12 2a14.5 14.5 0 0 0 0 20 14.5 14.5 0 0 0 0-20" />
      <path d="M2 12h20" />
    </svg>
  );
}

function InstagramIcon(
  props: JSX.IntrinsicAttributes & SVGProps<SVGSVGElement>
) {
  return (
    <svg
      {...props}
      xmlns="http://www.w3.org/2000/svg"
      width="24"
      height="24"
      viewBox="0 0 24 24"
      fill="none"
      stroke="currentColor"
      strokeWidth="2"
      strokeLinecap="round"
      strokeLinejoin="round"
    >
      <rect width="20" height="20" x="2" y="2" rx="5" ry="5" />
      <path d="M16 11.37A4 4 0 1 1 12.63 8 4 4 0 0 1 16 11.37z" />
      <line x1="17.5" x2="17.51" y1="6.5" y2="6.5" />
    </svg>
  );
}

function LightbulbIcon(
  props: JSX.IntrinsicAttributes & SVGProps<SVGSVGElement>
) {
  return (
    <svg
      {...props}
      xmlns="http://www.w3.org/2000/svg"
      width="24"
      height="24"
      viewBox="0 0 24 24"
      fill="none"
      stroke="currentColor"
      strokeWidth="2"
      strokeLinecap="round"
      strokeLinejoin="round"
    >
      <path d="M15 14c.2-1 .7-1.7 1.5-2.5 1-.9 1.5-2.2 1.5-3.5A6 6 0 0 0 6 8c0 1 .2 2.2 1.5 3.5.7.7 1.3 1.5 1.5 2.5" />
      <path d="M9 18h6" />
      <path d="M10 22h4" />
    </svg>
  );
}

function LocateIcon(props: JSX.IntrinsicAttributes & SVGProps<SVGSVGElement>) {
  return (
    <svg
      {...props}
      xmlns="http://www.w3.org/2000/svg"
      width="24"
      height="24"
      viewBox="0 0 24 24"
      fill="none"
      stroke="currentColor"
      strokeWidth="2"
      strokeLinecap="round"
      strokeLinejoin="round"
    >
      <line x1="2" x2="5" y1="12" y2="12" />
      <line x1="19" x2="22" y1="12" y2="12" />
      <line x1="12" x2="12" y1="2" y2="5" />
      <line x1="12" x2="12" y1="19" y2="22" />
      <circle cx="12" cy="12" r="7" />
    </svg>
  );
}

function LogInIcon(props: JSX.IntrinsicAttributes & SVGProps<SVGSVGElement>) {
  return (
    <svg
      {...props}
      xmlns="http://www.w3.org/2000/svg"
      width="24"
      height="24"
      viewBox="0 0 24 24"
      fill="none"
      stroke="currentColor"
      strokeWidth="2"
      strokeLinecap="round"
      strokeLinejoin="round"
    >
      <path d="M15 3h4a2 2 0 0 1 2 2v14a2 2 0 0 1-2 2h-4" />
      <polyline points="10 17 15 12 10 7" />
      <line x1="15" x2="3" y1="12" y2="12" />
    </svg>
  );
}

function MailIcon(props: JSX.IntrinsicAttributes & SVGProps<SVGSVGElement>) {
  return (
    <svg
      {...props}
      xmlns="http://www.w3.org/2000/svg"
      width="24"
      height="24"
      viewBox="0 0 24 24"
      fill="none"
      stroke="currentColor"
      strokeWidth="2"
      strokeLinecap="round"
      strokeLinejoin="round"
    >
      <rect width="20" height="16" x="2" y="4" rx="2" />
      <path d="m22 7-8.97 5.7a1.94 1.94 0 0 1-2.06 0L2 7" />
    </svg>
  );
}

function MenuIcon(props: JSX.IntrinsicAttributes & SVGProps<SVGSVGElement>) {
  return (
    <svg
      {...props}
      xmlns="http://www.w3.org/2000/svg"
      width="24"
      height="24"
      viewBox="0 0 24 24"
      fill="none"
      stroke="currentColor"
      strokeWidth="2"
      strokeLinecap="round"
      strokeLinejoin="round"
    >
      <line x1="4" x2="20" y1="12" y2="12" />
      <line x1="4" x2="20" y1="6" y2="6" />
      <line x1="4" x2="20" y1="18" y2="18" />
    </svg>
  );
}

function PackageIcon(props: JSX.IntrinsicAttributes & SVGProps<SVGSVGElement>) {
  return (
    <svg
      {...props}
      xmlns="http://www.w3.org/2000/svg"
      width="24"
      height="24"
      viewBox="0 0 24 24"
      fill="none"
      stroke="currentColor"
      strokeWidth="2"
      strokeLinecap="round"
      strokeLinejoin="round"
    >
      <path d="m7.5 4.27 9 5.15" />
      <path d="M21 8a2 2 0 0 0-1-1.73l-7-4a2 2 0 0 0-2 0l-7 4A2 2 0 0 0 3 8v8a2 2 0 0 0 1 1.73l7 4a2 2 0 0 0 2 0l7-4A2 2 0 0 0 21 16Z" />
      <path d="m3.3 7 8.7 5 8.7-5" />
      <path d="M12 22V12" />
    </svg>
  );
}

function PhoneIcon(props: JSX.IntrinsicAttributes & SVGProps<SVGSVGElement>) {
  return (
    <svg
      {...props}
      xmlns="http://www.w3.org/2000/svg"
      width="24"
      height="24"
      viewBox="0 0 24 24"
      fill="none"
      stroke="currentColor"
      strokeWidth="2"
      strokeLinecap="round"
      strokeLinejoin="round"
    >
      <path d="M22 16.92v3a2 2 0 0 1-2.18 2 19.79 19.79 0 0 1-8.63-3.07 19.5 19.5 0 0 1-6-6 19.79 19.79 0 0 1-3.07-8.67A2 2 0 0 1 4.11 2h3a2 2 0 0 1 2 1.72 12.84 12.84 0 0 0 .7 2.81 2 2 0 0 1-.45 2.11L8.09 9.91a16 16 0 0 0 6 6l1.27-1.27a2 2 0 0 1 2.11-.45 12.84 12.84 0 0 0 2.81.7A2 2 0 0 1 22 16.92z" />
    </svg>
  );
}

function QrCodeIcon(props: JSX.IntrinsicAttributes & SVGProps<SVGSVGElement>) {
  return (
    <svg
      {...props}
      xmlns="http://www.w3.org/2000/svg"
      width="24"
      height="24"
      viewBox="0 0 24 24"
      fill="none"
      stroke="currentColor"
      strokeWidth="2"
      strokeLinecap="round"
      strokeLinejoin="round"
    >
      <rect width="5" height="5" x="3" y="3" rx="1" />
      <rect width="5" height="5" x="16" y="3" rx="1" />
      <rect width="5" height="5" x="3" y="16" rx="1" />
      <path d="M21 16h-3a2 2 0 0 0-2 2v3" />
      <path d="M21 21v.01" />
      <path d="M12 7v3a2 2 0 0 1-2 2H7" />
      <path d="M3 12h.01" />
      <path d="M12 3h.01" />
      <path d="M12 16v.01" />
      <path d="M16 12h1" />
      <path d="M21 12v.01" />
      <path d="M12 21v-1" />
    </svg>
  );
}

function RecycleIcon(props: JSX.IntrinsicAttributes & SVGProps<SVGSVGElement>) {
  return (
    <svg
      {...props}
      xmlns="http://www.w3.org/2000/svg"
      width="24"
      height="24"
      viewBox="0 0 24 24"
      fill="none"
      stroke="currentColor"
      strokeWidth="2"
      strokeLinecap="round"
      strokeLinejoin="round"
    >
      <path d="M7 19H4.815a1.83 1.83 0 0 1-1.57-.881 1.785 1.785 0 0 1-.004-1.784L7.196 9.5" />
      <path d="M11 19h8.203a1.83 1.83 0 0 0 1.556-.89 1.784 1.784 0 0 0 0-1.775l-1.226-2.12" />
      <path d="m14 16-3 3 3 3" />
      <path d="M8.293 13.596 7.196 9.5 3.1 10.598" />
      <path d="m9.344 5.811 1.093-1.892A1.83 1.83 0 0 1 11.985 3a1.784 1.784 0 0 1 1.546.888l3.943 6.843" />
      <path d="m13.378 9.633 4.096 1.098 1.097-4.096" />
    </svg>
  );
}

function StoreIcon(props: JSX.IntrinsicAttributes & SVGProps<SVGSVGElement>) {
  return (
    <svg
      {...props}
      xmlns="http://www.w3.org/2000/svg"
      width="24"
      height="24"
      viewBox="0 0 24 24"
      fill="none"
      stroke="currentColor"
      strokeWidth="2"
      strokeLinecap="round"
      strokeLinejoin="round"
    >
      <path d="m2 7 4.41-4.41A2 2 0 0 1 7.83 2h8.34a2 2 0 0 1 1.42.59L22 7" />
      <path d="M4 12v8a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2v-8" />
      <path d="M15 22v-4a2 2 0 0 0-2-2h-2a2 2 0 0 0-2 2v4" />
      <path d="M2 7h20" />
      <path d="M22 7v3a2 2 0 0 1-2 2v0a2.7 2.7 0 0 1-1.59-.63.7.7 0 0 0-.82 0A2.7 2.7 0 0 1 16 12a2.7 2.7 0 0 1-1.59-.63.7.7 0 0 0-.82 0A2.7 2.7 0 0 1 12 12a2.7 2.7 0 0 1-1.59-.63.7.7 0 0 0-.82 0A2.7 2.7 0 0 1 8 12a2.7 2.7 0 0 1-1.59-.63.7.7 0 0 0-.82 0A2.7 2.7 0 0 1 4 12v0a2 2 0 0 1-2-2V7" />
    </svg>
  );
}

function TargetIcon(props: JSX.IntrinsicAttributes & SVGProps<SVGSVGElement>) {
  return (
    <svg
      {...props}
      xmlns="http://www.w3.org/2000/svg"
      width="24"
      height="24"
      viewBox="0 0 24 24"
      fill="none"
      stroke="currentColor"
      strokeWidth="2"
      strokeLinecap="round"
      strokeLinejoin="round"
    >
      <circle cx="12" cy="12" r="10" />
      <circle cx="12" cy="12" r="6" />
      <circle cx="12" cy="12" r="2" />
    </svg>
  );
}

function ThumbsUpIcon(
  props: JSX.IntrinsicAttributes & SVGProps<SVGSVGElement>
) {
  return (
    <svg
      {...props}
      xmlns="http://www.w3.org/2000/svg"
      width="24"
      height="24"
      viewBox="0 0 24 24"
      fill="none"
      stroke="currentColor"
      strokeWidth="2"
      strokeLinecap="round"
      strokeLinejoin="round"
    >
      <path d="M7 10v12" />
      <path d="M15 5.88 14 10h5.83a2 2 0 0 1 1.92 2.56l-2.33 8A2 2 0 0 1 17.5 22H4a2 2 0 0 1-2-2v-8a2 2 0 0 1 2-2h2.76a2 2 0 0 0 1.79-1.11L12 2h0a3.13 3.13 0 0 1 3 3.88Z" />
    </svg>
  );
}

function TruckIcon(props: JSX.IntrinsicAttributes & SVGProps<SVGSVGElement>) {
  return (
    <svg
      {...props}
      xmlns="http://www.w3.org/2000/svg"
      width="24"
      height="24"
      viewBox="0 0 24 24"
      fill="none"
      stroke="currentColor"
      strokeWidth="2"
      strokeLinecap="round"
      strokeLinejoin="round"
    >
      <path d="M14 18V6a2 2 0 0 0-2-2H4a2 2 0 0 0-2 2v11a1 1 0 0 0 1 1h2" />
      <path d="M15 18H9" />
      <path d="M19 18h2a1 1 0 0 0 1-1v-3.65a1 1 0 0 0-.22-.624l-3.48-4.35A1 1 0 0 0 17.52 8H14" />
      <circle cx="17" cy="18" r="2" />
      <circle cx="7" cy="18" r="2" />
    </svg>
  );
}

function TwitterIcon(props: JSX.IntrinsicAttributes & SVGProps<SVGSVGElement>) {
  return (
    <svg
      {...props}
      xmlns="http://www.w3.org/2000/svg"
      width="24"
      height="24"
      viewBox="0 0 24 24"
      fill="none"
      stroke="currentColor"
      strokeWidth="2"
      strokeLinecap="round"
      strokeLinejoin="round"
    >
      <path d="M22 4s-.7 2.1-2 3.4c1.6 10-9.4 17.3-18 11.6 2.2.1 4.4-.6 6-2C3 15.5.5 9.6 3 5c2.2 2.6 5.6 4.1 9 4-.9-4.2 4-6.6 7-3.8 1.1 0 3-1.2 3-1.2z" />
    </svg>
  );
}
